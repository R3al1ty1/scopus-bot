version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mynetwork

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram_bot
    restart: always
    depends_on:
      - db
      - redis
      - celery
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      TELEGRAM_TOKEN: ${BOT_TOKEN}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app
    command: python main.py
    networks:
      - mynetwork

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    container_name: telegram_admin
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      TELEGRAM_TOKEN: ${BOT_ADMIN}
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app
    command: python admin.py
    networks:
      - mynetwork

  monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitor
    container_name: status_monitor
    restart: always
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app
    command: python checker.py
    networks:
      - mynetwork

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mynetwork

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    restart: always
    depends_on:
      - redis
      - db
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      TELEGRAM_TOKEN: ${BOT_TOKEN}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app
    command: celery -A tasks.celery_app worker --loglevel=info
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
